"""make password nullable and created_at not null

Revision ID: 7b588e4f3cbf
Revises: remove_zerodha_api_credentials
Create Date: 2025-06-07 18:36:07.258615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7b588e4f3cbf'
down_revision: Union[str, None] = 'remove_zerodha_api_credentials'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True,
               existing_server_default=sa.text("'$2b$12$iTn4aG7xAcxj.kJUkFORquLbnhWjxPDdIsX8LNPAF5nEtuk/03zHu'::character varying"))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False,
               existing_server_default=sa.text("'$2b$12$iTn4aG7xAcxj.kJUkFORquLbnhWjxPDdIsX8LNPAF5nEtuk/03zHu'::character varying"))
    # ### end Alembic commands ###
